{
  "version": 3,
  "sources": ["browser-route-module:C:\\Users\\howie.ng\\Documents\\projects\\blockchain\\sign-on-ethereum\\app\\routes\\login\\$userId.tsx?browser", "../../../../app/routes/login/$userId.tsx"],
  "sourcesContent": ["export { default } from \"C:\\\\Users\\\\howie.ng\\\\Documents\\\\projects\\\\blockchain\\\\sign-on-ethereum\\\\app\\\\routes\\\\login\\\\$userId.tsx\";", "import { db } from \"~/utils/db.server\";\r\nimport { LoaderFunction, useLoaderData } from \"remix\";\r\nimport { User } from \"@prisma/client\"\r\nimport invariant from \"tiny-invariant\";\r\n\r\nexport const loader: LoaderFunction = async ({params}) => {\r\n    invariant(params.userId, \"Expected params.userId to exist\");\r\n\r\n    const user = await db.user.findUnique({\r\n        where : {\r\n            address: params.userId,\r\n        }\r\n    });\r\n\r\n    if( !user ) return null;\r\n\r\n    return user;\r\n}\r\n\r\nexport default function userPage() {\r\n    const user = useLoaderData<User>()\r\n    return (\r\n        <div>\r\n            <h1>gm</h1>\r\n            <p>{user.address}</p>\r\n        </div>\r\n    );\r\n}"],
  "mappings": ";;;;;;;;;;;;;AAAA;;;ACAA;AAAA,gBAAmB;AAmBJ,oBAAoB;AAC/B,QAAM,OAAO;AACb,SACI,oCAAC,OAAD,MACI,oCAAC,MAAD,MAAI,OACJ,oCAAC,KAAD,MAAI,KAAK;AAAA;",
  "names": []
}
